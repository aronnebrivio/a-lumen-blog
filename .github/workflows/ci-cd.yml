name: CI/CD

on: push

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: blog_testing
        ports:
          - 3306

      redis:
        image: redis
        ports:
          - 6379

    steps:
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.0"
          tools: phpunit, composer
          coverage: xdebug

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Copy .env
        run: cp environments/ci/.env .env

      - name: Install Dependencies
        run: composer install --ignore-platform-reqs

      - name: Generate JWT Secret
        run: php artisan jwt:secret

      - name: Run Migrations
        run: php artisan migrate
        env:
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}

      - name: Run PHPUnit tests
        run: composer test:ci
        env:
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}
          REDIS_PORT: ${{ job.services.redis.ports['6379'] }}
          XDEBUG_MODE: coverage

      - name: Run Psalm
        run: ./vendor/bin/psalm --shepherd --show-info=false --stats

      - name: Upload coverage report
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml

  deploy:
    runs-on: ubuntu-latest

    needs: test

    if: github.ref == 'refs/heads/master'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Copy production Dockerfile
        run: cp environments/production/Dockerfile Dockerfile

      - name: Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
          heroku_email: ${{secrets.HEROKU_EMAIL}}
          usedocker: true
          docker_build_args: |
            DB_HOST
            DB_DATABASE
            DB_USERNAME
            DB_PASSWORD
            REDIS_HOST
            REDIS_PORT
            REDIS_DATABASE
            REDIS_PASSWORD
            JWT_SECRET
        env:
          DB_HOST: ${{secrets.PROD_DB_HOST}}
          DB_DATABASE: ${{secrets.PROD_DB_DATABASE}}
          DB_USERNAME: ${{secrets.PROD_DB_USERNAME}}
          DB_PASSWORD: ${{secrets.PROD_DB_PASSWORD}}
          REDIS_HOST: ${{secrets.PROD_REDIS_HOST}}
          REDIS_PORT: ${{secrets.PROD_REDIS_PORT}}
          REDIS_DATABASE: ${{secrets.PROD_REDIS_DATABASE}}
          REDIS_PASSWORD: ${{secrets.PROD_REDIS_PASSWORD}}
          JWT_SECRET: ${{secrets.PROD_JWT_SECRET}}
